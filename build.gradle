plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.flywaydb.flyway" version "7.12.1"
}

def dbUser = System.getenv('DATABASE_USER') ?: 'postgres'
def dbPassword = System.getenv('DATABASE_PASSWORD') ?: 'password'
def dbHost = System.getenv('DATABASE_HOST') ?: 'localhost'
def dbPort = System.getenv('DATABASE_PORT') ?: 5432
def dbName = System.getenv('DATABASE_NAME') ?: 'postgres'
def dbUrl = System.getenv('DATABASE_URL') ?: "jdbc:postgresql://$dbHost:$dbPort/$dbName"

flyway {
    url = dbUrl
    user = dbUser
    password = dbPassword
}
group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.flywaydb:flyway-core'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'

    runtimeOnly 'org.postgresql:postgresql'
}

test {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}
